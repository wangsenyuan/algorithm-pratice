package main

func main() {

}

func solve(A []int) bool {
	// 如果没有swap的情况下，要满足怎样的条件才能全部移除呢？
	// 假设最后移除的两个是 (i, i + 1)
	// 那么在开始移除它们前，A[i] = A[i+1]
	// sum % 2 == 0
	// 这个pattern没有问题了，但是如何在只swap一次的情况下， 判断是否能完成呢？
	// A[1] -= A[0] >= 0
	// A[2] -= A[1] >= 0
	// A[3] -= A[2] >= 0
	// sum[i % 2] + A[i] >= sum[(i % 2) ^ 1]
	// 直到上面的i为止，
	//
}
